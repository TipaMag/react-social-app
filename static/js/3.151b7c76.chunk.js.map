{"version":3,"sources":["components/common/Paggination/Paggination.styles.ts","components/common/Paggination/Paggination.tsx","components/Users/User/User.styles.js","components/Users/User/User.tsx","components/Users/Users.styles.js","components/Users/Users.tsx","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["PagginationContainer","styled","div","PageNumber","props","selectedPage","Paggination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagesList","filter","page","map","key","onClick","Button","disabled","ListItem","li","UserPhoto","UserInfo","UserInfoName","span","UserInfoTitle","SendMessageBtn","FollowingBtn","User","userId","smallPhoto","name","status","followed","isAuth","onUnfollow","onFollow","startChatting","followingInProgress","to","src","defaultUserPhoto","alt","type","some","id","UsersContainer","Controls","UsersList","ul","Users","users","totalUsersCount","item","photos","small","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsers","state","usersPage","items","u","getAuth","auth","getUsersPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","compose","connect","requestUsers","getNewPage","setFollow","setUnfollow","useEffect","Preloader"],"mappings":"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","file":"static/js/3.151b7c76.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const PagginationContainer = styled.div `\n    display: inline-flex;\n    flex-flow: row nowrap;\n    padding: 5px;\n`\n\ninterface PageNumberProps {\n    selectedPage: any\n}\nexport const PageNumber = styled.div<PageNumberProps>`\n    color: ${props => props.selectedPage ? \"#fff\" : \"#000\"};\n    background-color: ${props => props.selectedPage ? \"#6ea6ce\" : \"#fff\"};\n    cursor: pointer;\n    padding: 0 2px;\n    margin: 0 2px;\n    &:hover {\n        color: blue;\n    }\n`\n","import React, { useState } from 'react'\nimport { PagginationContainer, PageNumber } from './Paggination.styles'\nimport Button from '../../../elements/Button'\n\ninterface Props {\n   totalItemsCount: number\n   pageSize: number\n   currentPage: number\n   onPageChanged: (page: number) => void\n   portionSize?: number\n}\nconst Paggination: React.FC<Props> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n   let pagesCount = Math.ceil(totalItemsCount / pageSize)\n   let pages: number[] = []\n\n   for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i)\n   }\n   let portionCount = Math.ceil(pagesCount / portionSize)\n   let [portionNumber, setPortionNumber] = useState(1)\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n   let rightPortionPageNumber = portionNumber * portionSize\n\n   let pagesList = pages\n      .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n      .map(page => {\n         return (\n            <PageNumber selectedPage={currentPage === page} key={page} onClick={() => onPageChanged(page)}>\n               {page}\n            </PageNumber>\n         )\n      })\n   return (\n      <PagginationContainer>\n         <Button onClick={() => setPortionNumber(portionNumber - 1)} disabled={portionNumber <= 1}>PREV</Button>\n         {pagesList}\n         <Button onClick={() => setPortionNumber(portionNumber + 1)} disabled={portionCount <= portionNumber}>NEXT</Button>\n      </PagginationContainer>\n   )\n}\n\nexport default Paggination","import styled from 'styled-components'\r\n\r\nexport const ListItem = styled.li`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding: 5px;\r\n   border: 1px solid #ccc;\r\n`\r\nexport const UserPhoto = styled.div`\r\n    width: 55px;\r\n    height: 55px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    margin-right: 20px;\r\n    & a {\r\n        display: flex;\r\n    }\r\n    & a img {\r\n        width: 100%;\r\n    }\r\n`\r\nexport const UserInfo = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    flex-grow: 2;\r\n`\r\nexport const UserInfoName = styled.span`\r\n\r\n`\r\nexport const UserInfoTitle = styled.span`\r\n    color: #afafaf;\r\n`\r\nexport const SendMessageBtn = styled.div`\r\n    \r\n`\r\nexport const FollowingBtn = styled.div`\r\n    margin: 0 20px;\r\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport defaultUserPhoto from '../../../assets/images/default-avatar-icon.png'\nimport Button from '../../../elements/Button'\nimport { ListItem, UserPhoto, UserInfo, UserInfoName, UserInfoTitle, SendMessageBtn, FollowingBtn } from './User.styles'\n\ninterface Props {\n   userId: number\n   smallPhoto: string\n   name: string\n   status: string\n   followed: boolean\n   isAuth: boolean\n   onFollow: (userId: number) => void\n   onUnfollow: (userId: number) => void\n   startChatting: (userId: number) => void\n   followingInProgress: Array<number>\n}\n\nconst User: React.FC<Props> = ({ userId, smallPhoto, name, status, followed, isAuth, onUnfollow, onFollow, startChatting, followingInProgress }) => {\n   return (\n      <ListItem>\n         <UserPhoto>\n            <Link to={'/profile/' + userId}>\n               <img src={smallPhoto != null ? smallPhoto : defaultUserPhoto} alt='avatar'></img>\n            </Link>\n         </UserPhoto>\n         <UserInfo>\n            <UserInfoName>{name}</UserInfoName>\n            <UserInfoTitle>{status}</UserInfoTitle>\n         </UserInfo>\n         {isAuth &&\n            <>\n               <SendMessageBtn>\n                  <Link to={'/dialogs/' + userId} onClick={() => startChatting(userId)}>\n                     <Button type=\"button\">write a message</Button>\n                  </Link>\n               </SendMessageBtn>\n               <FollowingBtn>\n                  {followed\n                     ? <Button disabled={followingInProgress.some(id => id === userId)} onClick={() => onUnfollow(userId)}>unfollow</Button>\n                     : <Button disabled={followingInProgress.some(id => id === userId)} onClick={() => onFollow(userId)}>follow</Button>\n                  }\n               </FollowingBtn>\n            </>\n         }\n      </ListItem>\n   )\n}\nexport default User","import styled from 'styled-components'\r\n\r\nexport const UsersContainer = styled.div`\r\n    \r\n`\r\nexport const Controls = styled.div`\r\n\r\n`\r\n\r\nexport const UsersList = styled.ul`\r\n   display: grid;\r\n   grid-gap: 5px;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n`","import React from 'react'\nimport Paggination from '../common/Paggination/Paggination'\nimport User from './User/User'\nimport { UsersContainer, Controls, UsersList } from './Users.styles'\nimport { UserType } from '../../types/Users-types'\n\ninterface Props {\n   users: Array<UserType>\n   isAuth: boolean\n   onPageChanged: (page: number) => void\n   onFollow: (userId: number) => void\n   onUnfollow: (userId: number) => void\n   startChatting: (userId: number) => void\n   followingInProgress: Array<number>\n   totalUsersCount: number\n   pageSize: number\n   currentPage: number\n}\n\nconst Users: React.FC<Props> = ({ users, isAuth, onPageChanged, onFollow, onUnfollow, startChatting, followingInProgress, totalUsersCount, pageSize, currentPage }) => {\n   return (\n      <UsersContainer>\n         <Controls>\n            <Paggination totalItemsCount={totalUsersCount}\n               pageSize={pageSize}\n               currentPage={currentPage}\n               onPageChanged={onPageChanged}\n            />\n         </Controls>\n         <UsersList>\n            {users.map(item =>\n               <User key={item.id} userId={item.id} name={item.name} smallPhoto={item.photos.small} followed={item.followed} status={item.status}\n                  isAuth={isAuth}\n                  onFollow={onFollow}\n                  onUnfollow={onUnfollow}\n                  startChatting={startChatting}\n                  followingInProgress={followingInProgress}\n               />)\n            }\n         </UsersList>\n      </UsersContainer>\n   )\n}\n\nexport default Users","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\"\nimport { AppStateType } from \"./redux-store\"\n\nconst getUsersSelector = (state: AppStateType) => {\n    return state.usersPage.users.items\n}\nexport const getUsers = createSelector(\n    [getUsersSelector],\n    (items) => {\n        return items.filter(u => true)\n    }\n)\nexport const getAuth = (state: AppStateType) => {\n    return state.auth.isAuth\n}\nexport const getUsersPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\n\n\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { requestUsers, getNewPage, setFollow, setUnfollow } from '../../redux/users-reducer'\nimport { startChatting } from '../../redux/dialogs-reducer'\nimport Users from './Users'\nimport Preloader from '../common/Preloader/Preloader'\nimport { compose } from 'redux'\nimport { getUsers, getAuth, getUsersPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/users-selectors'\nimport { AppStateType } from '../../redux/redux-store'\nimport { UserType } from '../../types/Users-types'\n\ntype Props = MapStateProps & MapDispatchProps\nconst UsersContainer: React.FC<Props> = (props) => {\n   useEffect(() => {\n      props.requestUsers(props.pageSize, props.currentPage)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n   const onPageChanged = (page: number) => {\n      props.getNewPage(props.pageSize, page)\n   }\n   const onFollow = (userId: number) => {\n      props.setFollow(userId)\n   }\n   const onUnfollow = (userId: number) => {\n      props.setUnfollow(userId)\n   }\n   return (\n      <>\n         {props.isFetching\n            ? <Preloader />\n            : null\n         }\n         <Users {...props}\n            onPageChanged={onPageChanged}\n            onFollow={onFollow}\n            onUnfollow={onUnfollow}\n         />   \n      </>\n   )\n}\n\ninterface MapStateProps {\n   users: Array<UserType>\n   isAuth: boolean\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFetching: boolean\n   followingInProgress: Array<number>\n}\ninterface MapDispatchProps {\n   requestUsers: (pageSize: number, page: number) => void\n   getNewPage: (pageSize: number, page: number) => void\n   setFollow: (userId: number) => void\n   setUnfollow: (userId: number) => void\n   startChatting: (userId: number) => void\n}\nlet mapStateToProps = (state: AppStateType) => ({\n   users: getUsers(state),\n   isAuth: getAuth(state),\n   pageSize: getUsersPageSize(state),\n   totalUsersCount: getTotalUsersCount(state),\n   currentPage: getCurrentPage(state),\n   isFetching: getIsFetching(state),\n   followingInProgress: getFollowingInProgress(state)\n})\n\n\nexport default compose(\n   connect<MapStateProps, MapDispatchProps, null, AppStateType>(mapStateToProps, {\n      requestUsers,\n      getNewPage,\n      setFollow,\n      setUnfollow,\n      startChatting\n   })\n)(UsersContainer)"],"sourceRoot":""}