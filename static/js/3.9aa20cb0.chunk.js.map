{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/Paggination/Paggination.styles.ts","components/common/Paggination/Paggination.tsx","components/Users/User/User.styles.js","components/Users/User/User.tsx","components/Users/Users.styles.js","../node_modules/reselect/es/index.js","redux/users-selectors.ts","components/Users/Search/Search.jsx","components/Users/Users.tsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","PagginationContainer","styled","div","PageNumber","props","selectedPage","Paggination","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","useEffect","leftPortionPageNumber","rightPortionPageNumber","Button","onClick","disabled","filter","page","map","ListItem","li","UserPhoto","UserInfo","UserInfoName","span","UserInfoTitle","SendMessageBtn","FollowingBtn","User","userId","smallPhoto","name","status","followed","isAuth","onUnfollow","onFollow","startChatting","followingInProgress","to","src","defaultUserPhoto","alt","type","icon","faEnvelope","some","id","UsersContainer","Controls","UsersList","ul","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getUsers","state","usersPage","users","items","u","getAuth","auth","getUsersPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getSearchUser","searchUser","SearchForm","form","Search","onSearchUser","value","setValue","onSubmit","e","preventDefault","placeholder","onChange","faSearch","compose","connect","requestUsers","getNewPage","setFollow","setUnfollow","searchUsers","Preloader","item","photos","small"],"mappings":"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","file":"static/js/3.9aa20cb0.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from \"styled-components\"\n\nexport const PagginationContainer = styled.div `\n    display: inline-flex;\n    flex-flow: row nowrap;\n    padding: 5px;\n`\n\ninterface PageNumberProps {\n    selectedPage: any\n}\nexport const PageNumber = styled.div<PageNumberProps>`\n    color: ${props => props.selectedPage ? \"#fff\" : \"#000\"};\n    background-color: ${props => props.selectedPage ? \"#6ea6ce\" : \"#fff\"};\n    cursor: pointer;\n    padding: 0 2px;\n    margin: 0 2px;\n    &:hover {\n        color: blue;\n    }\n`\n","import React, { useState, useEffect } from 'react'\nimport { PagginationContainer, PageNumber } from './Paggination.styles'\nimport Button from '../../../elements/Button'\n\ninterface Props {\n   totalItemsCount: number\n   pageSize: number\n   currentPage: number\n   onPageChanged: (page: number) => void\n   portionSize?: number\n}\nconst Paggination: React.FC<Props> = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\n   let pagesCount = Math.ceil(totalItemsCount / pageSize)\n   let pages: number[] = []\n\n   for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i)\n   }\n   let portionCount = Math.ceil(pagesCount / portionSize)\n   let [portionNumber, setPortionNumber] = useState(1)\n   \n   useEffect(() => {\n      setPortionNumber(1)\n   }, [totalItemsCount])\n\n   let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n   let rightPortionPageNumber = portionNumber * portionSize\n\n   return (\n      <PagginationContainer>\n         <Button onClick={() => setPortionNumber(portionNumber - 1)} disabled={portionNumber <= 1}>{'<<'}</Button>\n         {pages\n            .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n            .map(page => (\n               <PageNumber selectedPage={currentPage === page} key={page} onClick={() => onPageChanged(page)}>\n                  {page}\n               </PageNumber>\n            ))\n         }\n         <Button onClick={() => setPortionNumber(portionNumber + 1)} disabled={portionCount <= portionNumber}>{'>>'}</Button>\n      </PagginationContainer>\n   )\n}\n\nexport default Paggination","import styled from 'styled-components'\r\n\r\nexport const ListItem = styled.li`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding: 3px;\r\n   border: 1px solid var(--DARK-BLUE);\r\n   border-radius: 4px;\r\n`\r\nexport const UserPhoto = styled.div`\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    margin-right: 20px;\r\n    & a {\r\n        display: flex;\r\n    }\r\n    & a img {\r\n        width: 100%;\r\n    }\r\n`\r\nexport const UserInfo = styled.div`\r\n    display: flex;\r\n    flex-flow: column;\r\n    flex-grow: 2;\r\n`\r\nexport const UserInfoName = styled.span`\r\n\r\n`\r\nexport const UserInfoTitle = styled.span`\r\n    color: #afafaf;\r\n`\r\nexport const SendMessageBtn = styled.div`\r\n    \r\n`\r\nexport const FollowingBtn = styled.div`\r\n    margin: 0 20px;\r\n`","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport defaultUserPhoto from '../../../assets/images/default-avatar-icon.png'\nimport Button from '../../../elements/Button'\nimport { ListItem, UserPhoto, UserInfo, UserInfoName, UserInfoTitle, SendMessageBtn, FollowingBtn } from './User.styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\n\ninterface Props {\n   userId: number\n   smallPhoto: string\n   name: string\n   status: string\n   followed: boolean\n   isAuth: boolean\n   onFollow: (userId: number) => void\n   onUnfollow: (userId: number) => void\n   startChatting: (userId: number) => void\n   followingInProgress: Array<number>\n}\n\nconst User: React.FC<Props> = ({ userId, smallPhoto, name, status, followed, isAuth, onUnfollow, onFollow, startChatting, followingInProgress }) => {\n   return (\n      <ListItem>\n         <UserPhoto>\n            <Link to={'/profile/' + userId}>\n               <img src={smallPhoto != null ? smallPhoto : defaultUserPhoto} alt='avatar'></img>\n            </Link>\n         </UserPhoto>\n         <UserInfo>\n            <UserInfoName>{name}</UserInfoName>\n            <UserInfoTitle>{status}</UserInfoTitle>\n         </UserInfo>\n         {isAuth &&\n            <>\n               <SendMessageBtn>\n                  <Link to={'/dialogs/' + userId} onClick={() => startChatting(userId)}>\n                     <Button type=\"button\">\n                        <FontAwesomeIcon icon={faEnvelope}/>\n                     </Button>\n                  </Link>\n               </SendMessageBtn>\n               <FollowingBtn>\n                  {followed\n                     ? <Button disabled={followingInProgress.some(id => id === userId)} onClick={() => onUnfollow(userId)}>unfollow</Button>\n                     : <Button disabled={followingInProgress.some(id => id === userId)} onClick={() => onFollow(userId)}>follow</Button>\n                  }\n               </FollowingBtn>\n            </>\n         }\n      </ListItem>\n   )\n}\nexport default User","import styled from 'styled-components'\r\n\r\nexport const UsersContainer = styled.div`\r\n    \r\n`\r\nexport const Controls = styled.div`\r\n   display: flex;\r\n   margin-bottom: 10px;\r\n   justify-content: space-between;\r\n`\r\n\r\nexport const UsersList = styled.ul`\r\n   display: grid;\r\n   grid-gap: 5px;\r\n   margin: 0;\r\n   padding: 0;\r\n   list-style: none;\r\n`","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from \"reselect\"\nimport { AppStateType } from \"./redux-store\"\n\nconst getUsersSelector = (state: AppStateType) => {\n    return state.usersPage.users.items\n}\nexport const getUsers = createSelector(\n    [getUsersSelector],\n    (items) => {\n        return items.filter(u => true)\n    }\n)\nexport const getAuth = (state: AppStateType) => {\n    return state.auth.isAuth\n}\nexport const getUsersPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\nexport const getSearchUser = (state: AppStateType) => {\n    return state.usersPage.searchUser\n}\n\n","import React, { useState } from 'react'\r\nimport Button from '../../../elements/Button'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst SearchForm = styled.form`\r\n    display: flex;\r\n    & input {\r\n        margin-right: 10px;\r\n        outline: none;\r\n    }\r\n`\r\nconst Search = ({onSearchUser}) => {\r\n    let [value, setValue] = useState('')\r\n\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault()\r\n        onSearchUser(value)\r\n    }\r\n\r\n    return (\r\n        <SearchForm onSubmit={onSubmitHandler}>\r\n            <input type='text'\r\n                placeholder='search user...'\r\n                onChange={e => setValue(e.target.value)}\r\n                value={value}\r\n            />\r\n            <Button type='submit'>\r\n                <FontAwesomeIcon icon={faSearch}/>\r\n            </Button>\r\n        </SearchForm>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useEffect } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nimport Paggination from '../common/Paggination/Paggination'\nimport User from './User/User'\nimport { UsersContainer, Controls, UsersList } from './Users.styles'\n\nimport { getUsers, getAuth, getUsersPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getSearchUser } from '../../redux/users-selectors'\nimport { AppStateType } from '../../redux/redux-store'\nimport { UserType } from '../../types/Users-types'\nimport { requestUsers, getNewPage, setFollow, setUnfollow, searchUsers } from '../../redux/users-reducer'\nimport { startChatting } from '../../redux/dialogs-reducer'\nimport Preloader from '../common/Preloader/Preloader'\nimport Search from './Search/Search'\n\n\ntype Props = MapStateProps & MapDispatchProps\nconst Users: React.FC<Props> = ({ users, isAuth, isFetching, startChatting, followingInProgress, totalUsersCount, pageSize, currentPage, ...props }) => {\n\n   useEffect(() => {\n      props.requestUsers(pageSize, currentPage)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [props.searchUser])\n   const onPageChanged = (page: number) => {\n      props.getNewPage(pageSize, page)\n   }\n   const onFollow = (userId: number) => {\n      props.setFollow(userId)\n   }\n   const onUnfollow = (userId: number) => {\n      props.setUnfollow(userId)\n   }\n   const onSearchUser = (searchUser: string) => {\n      props.searchUsers(searchUser)\n   }\n\n   // if (isFetching) return <Preloader/>\n   return (\n      <UsersContainer>\n         <Controls>\n            <Paggination totalItemsCount={totalUsersCount}\n               pageSize={pageSize}\n               currentPage={currentPage}\n               onPageChanged={onPageChanged}\n            />\n            <Search onSearchUser={onSearchUser} />\n         </Controls>\n         {isFetching ?\n            <Preloader /> :\n            (users.length > 1) ?\n               <UsersList>\n                  {users.map(item =>\n                     <User key={item.id} userId={item.id} name={item.name} smallPhoto={item.photos.small} followed={item.followed} status={item.status}\n                        isAuth={isAuth}\n                        onFollow={onFollow}\n                        onUnfollow={onUnfollow}\n                        startChatting={startChatting}\n                        followingInProgress={followingInProgress}\n                     />)\n                  }\n               </UsersList> :\n               <div>no items</div>\n         }\n      </UsersContainer>\n   )\n}\n\ninterface MapStateProps {\n   users: Array<UserType>\n   isAuth: boolean\n   pageSize: number\n   totalUsersCount: number\n   currentPage: number\n   isFetching: boolean\n   followingInProgress: Array<number>\n   searchUser: string\n}\ninterface MapDispatchProps {\n   requestUsers: (pageSize: number, page: number) => void\n   getNewPage: (pageSize: number, page: number) => void\n   setFollow: (userId: number) => void\n   setUnfollow: (userId: number) => void\n   searchUsers: (searchUser: string) => void\n\n   startChatting: (userId: number) => void\n}\nlet mapStateToProps = (state: AppStateType) => ({\n   users: getUsers(state),\n   isAuth: getAuth(state),\n   pageSize: getUsersPageSize(state),\n   totalUsersCount: getTotalUsersCount(state),\n   currentPage: getCurrentPage(state),\n   isFetching: getIsFetching(state),\n   followingInProgress: getFollowingInProgress(state),\n   searchUser: getSearchUser(state)\n})\n\nexport default compose(\n   connect<MapStateProps, MapDispatchProps, null, AppStateType>(mapStateToProps, {\n      requestUsers,\n      getNewPage,\n      setFollow,\n      setUnfollow,\n      searchUsers,\n\n      startChatting\n   })\n)(Users)"],"sourceRoot":""}